package api_auto_test_java41.day01;

/**
 * 1.数组是一种数据结构，它是一个容器，用来盛放数据，不同类型的数组可以盛放不同类型的数据。
 * 特点：固定大小：数组的容量是确定的，也就是说在定义数组的时候必须指定数组的大小
 * 固定数据类型：数组的类型是确定的，也就是在定义数组的时候必须声明数组的类型，一种类型的数组只能放一种类型的数据
 *
 * 2.引用类型的变量它就是指的一个内存地址，一个位置信息（相当于门牌号）
 * 指向的内存中保存着变量所表示的一个值或一组值。
 */
public class Homework_day01 {
    public static void main(String[] args) {
        //===================创建一维数组===================
        //1、请使用两种语法创建数组，数组的元素为{“我”,”是”,”最”,”棒”,”的”}
        //1-1、第一种语法
        /*String[] arr1 = new String[5];
        arr1[0] = "我";
        arr1[1] = "是";
        arr1[2] = "最";
        arr1[3] = "棒";
        arr1[4] = "的";
        //1-2、第二种语法
        String[] arr2 = {"我","是","最","棒","的"};*/

        //2、请使用两种语法创建数组，数组的元素为{100,200,300,400,500}
        //2-1、第一种语法
        /*int[] arr1 = new int[5];
        arr1[0] = 100;
        arr1[1] = 200;
        arr1[2] = 300;
        arr1[3] = 400;
        arr1[4] = 500;
        //2-2、第二种语法
        int[] arr2 = {100,200,300,400,500};*/

        //======================创建二维数组====================
        //二维数组int a[3][4],代表行4列，每行有4个元素。
        //1、请使用两种语法来创建数组，数组的元素为{{“第一个”,”二维”},{“数”,”组”}}
        //1-1、第一种语法
        /*String[][] arr1 = new String[2][];
        arr1[0] = new String[2];
        arr1[0][0] = "第一个";
        arr1[0][1] = "二维";
        arr1[1] = new String[2];
        arr1[1][0] = "数";
        arr1[1][1] = "组";
        //1-2、第二种语法
        String[][] arr2 = {{"第一个","二维"},{"数","组"}};*/

        //2、请使用两种语法来创建数组，数组的元素为{{50,60},{70,80},{90,100,110}}
        //2-1、第一种语法
        int[][] arr1 = new int[3][];
        arr1[0] = new int[2];
        arr1[0][0] = 50;
        arr1[0][1] = 60;
        arr1[1] = new int[2];
        arr1[1][0] = 70;
        arr1[1][1] = 80;
        arr1[2] = new int[3];
        arr1[2][0] = 90;
        arr1[2][1] = 100;
        arr1[2][1] = 110;
        //2-2、第二种语法
        int[][] arr2 = {{50,60},{70,80},{90,100,110}};



        System.out.println(arr1[2][0]);
        //======================运算符作业========================
        /*int x = 1;int y = 2;int z = 3;
        求：x/y		0
        求：y/x		2
        求：x%y		1
        求：y%x		0
        求：(++x)+y	4  解释：++在变量的前面，会先去进行+1的操作，所以++x运算结果为2，2+2=4
        */
    }
}
